name: "Release Go binary package"
author: "Alexandre Marcondes <alexandre.marcondes@gmail.com>"
description: "Build and Release Go Binaries to GitHub Release Assets"

runs:
  using: "composite"
  steps:

    # See: https://github.com/marketplace/actions/get-json-property
    - name: Read go_version from release.json
      uses: notiz-dev/github-action-json-property@release
      id: go_version
      with:
        path: "release.json"
        prop_path: "go_version"

    # See: https://github.com/marketplace/actions/setup-go-environment
    - name: "Set up Go"
      uses: actions/setup-go@v3
      with:
        go-version: "${{ steps.go_version.outputs.prop }}"
        cache: true

    # See: https://github.com/marketplace/actions/go-dependency-submission
    - name: "Submit go dependencies"
      uses: actions/go-dependency-submission@v1
      with:
        go-mod-path: ./go.mod
        go-build-target: ./main.go

    # See: https://github.com/marketplace/actions/run-detect-secrets-with-reviewdog
    - name: "Detect secrets"
      uses: reviewdog/action-detect-secrets@master
      with:
        reporter: github-pr-review

    # See: https://github.com/marketplace/actions/run-languagetool-with-reviewdog
    - name: "Spellcheck"
      uses: reviewdog/action-languagetool@v1
      with:
        reporter: github-pr-check
        level: info

    - name: "Install remark-lint presets"
      run: npm install remark-preset-lint-recommended
      shell: bash

    # See: https://github.com/marketplace/actions/run-remark-lint-with-reviewdog
    - name: "Markdown lint"
      uses: reviewdog/action-remark-lint@v5
      with:
        reporter: github-pr-check
        level: info

    # See: https://github.com/marketplace/actions/run-golangci-lint-with-reviewdog
    - name: "Runs golangci-lint"
      uses: reviewdog/action-golangci-lint@v2
      with:
        go_version: "${{ steps.go_version.outputs.prop }}"

    # See: https://github.com/marketplace/actions/run-staticcheck-with-reviewdog
    - uses: reviewdog/action-staticcheck@v1
      with:
        reporter: github-pr-review
        install-go: false
        filter_mode: nofilter
        fail_on_error: true

    - name: "Run tests"
      run: "go test -json ./... > test.json"
      shell: bash

    # See: https://github.com/marketplace/actions/golang-test-annotations
    - name: "Annotate tests"
      if: always()
      uses: guyarb/golang-test-annotations@v0.5.1
      with:
        test-results: test.json

    # See: https://github.com/marketplace/actions/go-coverage
    - uses: gwatts/go-coverage-action@v1
      id: coverage
      with:
        coverage-threshold: 70
        fail-coverage: only_pull_requests
        add-comment: true
        cover-pkg: ./...

        # Ignore code-generated files when calculating coverage totals
        ignore-pattern: |
          \.pb\.go$
          \_string\.go$
