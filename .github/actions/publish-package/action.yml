name: "Release Go binary package"
author: "Alexandre Marcondes <alexandre.marcondes@gmail.com>"
description: "Build and Release Go Binaries to GitHub Release Assets"

inputs:
  token:
    description: "GITHUB_TOKEN for uploading releases to Github assets."
    required: true
    type: string
    default:  ${{ github.token }}
  repository:
    description: "Repository name."
    required: true
    type: string
    default: ${{ github.repository }}
  goos:
    description: "GOOS is the running programs operating system target: one of darwin, windows, linux, and so on."
    required: true
    type: string
    default: "linux"
  goarch:
    description: "GOARCH is the running programs architecture target: one of 386, amd64, arm, arm64, and so on."
    required: true
    type: string
    default: "amd64"
  extension:
    description: "Binary filename extension, like '.exe' for windows."
    required: true
    type: string
    default: ""
  tag:
    description: "Git tag to use for the package publishing."
    required: true
    type: string
    default:  ${{ github.ref_name }}

runs:
  using: "composite"
  steps:
  
    # See: https://github.com/marketplace/actions/get-json-property
    - name: "Read version from release.json"
      uses: notiz-dev/github-action-json-property@release
      id: package_version
      with:
        path: "release.json"
        prop_path: "version"

    # See: https://github.com/marketplace/actions/get-json-property
    - name: Read go_version from release.json
      uses: notiz-dev/github-action-json-property@release
      id: go_version
      with:
        path: "release.json"
        prop_path: "go_version"

    # See: https://github.com/marketplace/actions/go-release-binaries
    - name: "Release binary"
      uses: wangyoucao577/go-release-action@master
      with:
        github_token: ${{ inputs.token }}
        goos: ${{ inputs.goos }}
        goarch: ${{ inputs.goarch }}
        goversion: "${{ steps.go_version.outputs.prop }}"
        project_path: "."
        extra_files: LICENSE README.md
        sha256sum: true
        md5sum: true
        release_name: "${{ inputs.tag }}"
        release_tag: "${{ inputs.tag }}"
        binary_name: "${{ inputs.repository }}${{ inputs.extension }}"
        asset_name: "${{ inputs.repository }}-${{ inputs.goos }}-${{ inputs.goarch }}-${{ steps.package_version.outputs.prop }}"
        compress_assets: auto
        overwrite: true
