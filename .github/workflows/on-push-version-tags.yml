name: "Update released versions"

# The workflow below runs when the release event triggers when tags are created.
# For more information on the release event.
# See: [Events that trigger workflows](https://docs.github.com/en/actions/reference/events-that-trigger-workflows#push)

on:
  push:
    branches-ignore:
      - '**'
    tags:
      - 'v*.*'
      - 'v*'
      - 'latest'

concurrency:
  group: package_building-${{ github.ref }}
  cancel-in-progress: true

jobs:
  get-information:
    name: "Get version information"
    runs-on: ubuntu-latest

    outputs:
      package_version: ${{ steps.go_version.outputs.prop }}
      go_version: ${{ steps.go_version.outputs.prop }}

    steps:

      # See: https://github.com/marketplace/actions/checkout
      - name: "Checkout repository"
        id: checkout
        uses: actions/checkout@v3

        # See: https://github.com/marketplace/actions/get-json-property
      - name: "Read version from release.json"
        uses: notiz-dev/github-action-json-property@release
        id: package_version
        with:
          path: "release.json"
          prop_path: "version"

      # See: https://github.com/marketplace/actions/get-json-property
      - name: Read go_version from release.json
        uses: notiz-dev/github-action-json-property@release
        id: go_version
        with:
          path: "release.json"
          prop_path: "go_version"

  release:
    name: "Publish packages"
    runs-on: ubuntu-latest
    needs: get-information

    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, darwin/amd64, darwin/arm64, windows/386, windows/amd64
        goos: [linux, windows, darwin]
        goarch: ["386", amd64]
        exclude:
          # windows/386 and darwin/386 seems useless 
          - goarch: "386"
            goos: windows
          - goarch: "386"
            goos: darwin
        include:
          - goarch: linux
            extension: ""
          - goarch: darwin
            extension: ""
          - goarch: windows
            extension: ".exe"

    permissions:
      contents: write
      packages: write
      pull-requests: write

    steps:

      # See: https://github.com/marketplace/actions/checkout
      - name: "Checkout repository"
        id: checkout
        uses: actions/checkout@v3

      # See: https://github.com/marketplace/actions/go-release-binaries
      - name: "Release binary"
        uses: wangyoucao577/go-release-action@master
        with:
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: "${{ needs.get-information.outputs.go_version }}"
          project_path: "."
          extra_files: LICENSE README.md
          sha256sum: true
          md5sum: true
          release_name: "${{ github.ref_name }}"
          release_tag: "${{ github.ref_name }}"
          binary_name: "${{ github.repository }}${{ matrix.extension }}"
          asset_name: "${{ github.repository }}-${{ matrix.goos }}-${{ matrix.goarch }}-v{{ needs.get-information.outputs.package_version }}"
          compress_assets: auto
          overwrite: true
